function pronamicMapsAutocomplete(element,target){const map={postcode:"postal-code",city:"address-level2",street_name:"address-line1",country_name:"country-name",level_1:"address-level1"};var address={};for(const property in map){var input=element.querySelector('[autocomplete="'+map[property]+'"]');if(null!==input){address[property]=input.value}var inputs=element.querySelectorAll('[autocomplete="'+map[property]+'"]');inputs.forEach((input=>{if(input===target){return}if(""!==input.value){return}input.dispatchEvent(new Event("autocompleting.pronamic-maps"));input.classList.add("pronamic-maps-autocompleting")}))}fetch(pronamic_maps.rest_url_address_autocomplete,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(address)}).then((response=>response.json())).then((data=>{for(const property in map){var inputs=element.querySelectorAll('[autocomplete="'+map[property]+'"]');inputs.forEach((input=>{input.classList.remove("pronamic-maps-autocompleting");if(input===target){return}if(""!==input.value){return}input.value=data.address[property];input.dispatchEvent(new Event("autocompleted.pronamic-maps"));input.dispatchEvent(new Event("input"));input.dispatchEvent(new Event("change"))}))}})).catch((error=>{for(const property in map){var inputs=element.querySelectorAll('[autocomplete="'+map[property]+'"]');inputs.forEach((input=>{input.classList.remove("pronamic-maps-autocompleting")}))}}))}jQuery(".gform_wrapper").on("change",(function(event){pronamicMapsAutocomplete(this,event.target)}));jQuery(".gform_wrapper").each((function(){pronamicMapsAutocomplete(this)}));